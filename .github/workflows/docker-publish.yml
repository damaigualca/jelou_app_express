name: Deploy Docker Image to AWS ECR

on:
  schedule:
    - cron: '18 7 * * *' # Ejecuta a las 7:18 AM todos los días
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ] # Ejecuta en tags de versión semántica
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: your_ecr_repository_name # Nnombre de tu repositorio en ECR
  AWS_REGION: us-east-1 

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Instalar AWS CLI v2 y configurar credenciales
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login a ECR
      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      # Configuración de Docker Buildx (opcional, útil para builds avanzados)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Extraer metadatos (etiquetas, labels) para la imagen Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}

      # Construir y subir la imagen Docker a ECR (no empujar en PR)
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Opcional: Firma en la imagen de Docker resultante
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: "true"
